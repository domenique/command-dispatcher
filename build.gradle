/*
 * Copyright 2015 TripleD framework.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    ext {
        springBootVersion = '2.7.6'
        springDepMgmtVersion = '1.1.0'
        slf4jVersion = '2.+'
        junitVersion = '5.9.+'
    }
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/plugins-release' }
        jcenter()
    }
}
plugins {
    id "com.github.kt3k.coveralls" version "2.8.4"
}

// some global vars to determine the type of build.
ext {
    isDevBuild = false
    isCiBuild = false
    isReleaseBuild = false
    sonatypeRepositoryUrl = null
    sonatypeUsername = null
    sonatypePassword = null
}


allprojects {
    apply plugin: 'jacoco'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'signing'
    apply plugin: 'maven-publish'

    sourceCompatibility = 17
    targetCompatibility = 17

    group = 'eu.tripled-framework'
    version = '0.0.3'

    //set build variables based on build type (release, continuous integration, development)
    sonatypePassword = System.getenv('OSSRH_PASSWD')
    sonatypeUsername = System.getenv('OSSRH_USERNAME')

    if (project.hasProperty("release")) {
        isReleaseBuild = true
        sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
    } else if (project.hasProperty("ci")) {
        isCiBuild = true
        version += "-SNAPSHOT"
        sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
    } else {
        version += "-DEV"
        isDevBuild = true
    }

    task javadocJar(type: Jar) {
        archiveClassifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        archiveClassifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    if (isReleaseBuild) {
        signing {
            sign publishing.publications.mavenJava
        }
    }

        jacocoTestReport {
            getAdditionalSourceDirs().from(sourceSets.main.allSource.srcDirs)
            getSourceDirectories().from(sourceSets.main.allSource.srcDirs)
            getClassDirectories().from(sourceSets.main.output)
            reports {
                html.enabled = true
                xml.enabled = true
                csv.enabled = false
            }
        }
    }

    publishing {
        repositories {
            maven {
                url = sonatypeRepositoryUrl
                credentials {
                    username = sonatypeUsername
                    password = sonatypePassword
                }
            }
        }

        publications {
            mavenJava(MavenPublication) {
                pom {
                    name = 'TripleD framework'
                    packaging = 'jar'
                    description = 'TripleD is a framework to create CQRS based application using Java.'
                    url = 'http://www.tripled-framework.eu'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    scm {
                        url = 'scm:git@github.com:domenique/tripled-framework.git'
                        connection = 'scm:git@github.com:domenique/tripled-framework.git'
                        developerConnection = 'scm:git@github.com:domenique/tripled-framework.git'
                    }
                    developers {
                        developer {
                            id = 'domenique'
                            name = 'Dom√©nique Tilleuil'
                        }
                    }
                }
            }
        }
    }

    task jacocoRootReport(type: JacocoReport) {
        dependsOn = subprojects.test

        getAdditionalSourceDirs().from(subprojects.findAll { it.name != 'spring-boot-eventbus-starter' }.sourceSets.main.allSource.srcDirs)
        getSourceDirectories().from(subprojects.findAll { it.name != 'spring-boot-eventbus-starter' }.sourceSets.main.allSource.srcDirs)
        getClassDirectories().from(subprojects.findAll { it.name != 'spring-boot-eventbus-starter' }.sourceSets.main.output)
        getExecutionData().from(subprojects.findAll { it.name != 'spring-boot-eventbus-starter' }.jacocoTestReport.executionData)
        reports {
            html.enabled = true
            xml.enabled = true
            csv.enabled = false
        }
        onlyIf = {
            true
        }
        doFirst {
            getExecutionData().from(executionData.findAll {
                it.exists()
            })
        }
    }


    coveralls {
        sourceDirs = subprojects.sourceSets.main.allSource.srcDirs.flatten()
        jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
    }

    tasks.coveralls {
        group = 'Coverage reports'
        description = 'Uploads the aggregated coverage report to Coveralls'

        dependsOn jacocoRootReport
    }
